:sum is in the array:

#include <iostream>
#include <vector>
#include <map>
using namespace std;

string read(int n, vector<int> book, int target) {
    map<int, int> mpp;
    for (int i = 0; i < n; i++) {
        int a = book[i];
        int more = target - a;
        if (mpp.find(more) != mpp.end()) {
            return "YES";
        }
        mpp[a] = i;
    }
    return "NO";
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
: index of sum..

#include <vector>
#include <unordered_map>
using namespace std;

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int, int> mpp;
        vector<int> result;

        for (int i = 0; i < nums.size(); ++i) {
            int complement = target - nums[i];
            if (mpp.find(complement) != mpp.end()) {
                result.push_back(mpp[complement]);
                result.push_back(i);
                break;  // Assuming there's exactly one solution
            }
            mpp[nums[i]] = i;
        }

        return result;
    }
};
