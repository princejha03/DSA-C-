#include<iostream>
using namespace std;
void rotation(int arr[],int n,int k){
    if (n == 0)
    return;
    k = k % n;
    if (k > n)
    return;
    int temp[k];
    for(int i=0;i<k;i++){
        temp[i] = arr[i];
    }
    for(int i=k;i<n;i++){
        arr[i-k]= arr[i];
    }
    int j=0;
    for(int i=n-k;i<n;i++){
        arr[i]=temp[i - (n - k)];
        
    }
}

int main(){
    int n,i,k;
    cout << "enter the number of elemnts: ";
    cin >> n;
    int arr[n];
    cout << "enter " << n << " numbers in elements:\n";
    for(int i=0;i<n;i++){
        cin >> arr[i];
    }
    cout << "Enter spaces:";
    cin >> k;
    cout << "array is:\n";
    for(i=0;i<n;i++){
        cout << arr[i] << " ";
    }
    rotation(arr,n,k);
    
    cout << "\nthe rotated array is:\n";
    for(i=0;i<n;i++){
        cout << arr[i] << " ";
    }
    return 0;
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2nd method:

#include <iostream>
#include <algorithm> // Include the algorithm header for reverse function
using namespace std;

void rotation(int arr[], int n, int d) {
    reverse(arr, arr + d);
    reverse(arr + d, arr + n);
    reverse(arr, arr + n);
}

int main() {
    int arr[] = {1, 2, 3, 4, 5, 6, 7}; // Initialize the array directly
    int d = 3;
    int n = 7;
    rotation(arr, n, d);
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    return 0;
}

