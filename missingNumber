#include <vector>

class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int N = nums.size() + 1; // Total number of elements expected

        vector<int> hash(N + 1, 0); // Hash array initialized with size N+1 and all elements set to 0

        // Storing the frequencies:
        for (int i = 0; i < nums.size(); i++)
            hash[nums[i]]++;

        // Checking the frequencies for numbers 1 to N:
        for (int i = 1; i <= N; i++) {
            if (hash[i] == 0) {
                return i;
            }
        }

        // The following line will never execute.
        // It is just to avoid warnings.
        return -1;
    }
};
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#include <bits/stdc++.h>
using namespace std;

int missingNumber(vector<int>&a, int N) {

    int hash[N + 1] = {0}; //hash array

    // storing the frequencies:
    for (int i = 0; i < N - 1; i++)
        hash[a[i]]++;

    //checking the freqencies for numbers 1 to N:
    for (int i = 1; i <= N; i++) {
        if (hash[i] == 0) {
            return i;
        }
    }

    // The following line will never execute.
    // It is just to avoid warnings.
    return -1;
}
